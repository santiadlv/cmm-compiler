First+( S -> A void ID ( void ) H )={ void int float string ε $ }
First+( A -> B A )={ void int float string }
First+( A -> ε )={ void }
First+( B -> D ID B' )={ int float string }
First+( B -> void ID ( E ) H )={ void }
First+( B' -> C' )={ ; [ }
First+( B' -> ( E ) { I J return P ; } )={ ( }
First+( C -> D ID C' )={ int float string }
First+( C' -> ; )={ ; }
First+( C' -> [ INTEGER ] ; )={ [ }
First+( D -> int )={ int }
First+( D -> float )={ float }
First+( D -> string )={ string }
First+( E -> D ID G F )={ int float string }
First+( E -> void )={ void }
First+( F -> , D ID G F )={ , }
First+( F -> ε )={ ) }
First+( G -> [ ] )={ [ }
First+( G -> ε )={ , ) }
First+( H -> { I J return ; } )={ { }
First+( I -> C I )={ int float string }
First+( I -> ε )={ ID { if while return read write } }
First+( J -> K J )={ ID { if while read write }
First+( J -> ε )={ return } }
First+( K -> ID K' )={ ID }
First+( K -> { I J } )={ { }
First+( K -> if ( P ) K M )={ if }
First+( K -> while ( P ) K )={ while }
First+( K -> return N )={ return }
First+( K -> read ID O ; )={ read }
First+( K -> write P ; )={ write }
First+( K' -> O = L )={ [ = }
First+( K' -> ( X ) ; )={ ( }
First+( L -> P ; )={ ( ID INTEGER FLOAT }
First+( L -> STRING ; )={ STRING }
First+( M -> else K )={ else }
First+( M -> ε )={ ID { if while return read write } }
First+( N -> ; )={ ; }
First+( N -> P ; )={ ( ID INTEGER FLOAT }
First+( O -> [ R ] )={ [ }
First+( O -> ε )={ = ; * / + - , ) <= < > >= == != }
First+( P -> R P' )={ ( ID INTEGER FLOAT }
First+( P' -> Q R )={ <= < > >= == != }
First+( P' -> ε )={ ; ) }
First+( Q -> <= )={ <= }
First+( Q -> < )={ < }
First+( Q -> > )={ > }
First+( Q -> >= )={ >= }
First+( Q -> == )={ == }
First+( Q -> != )={ != }
First+( R -> T R' )={ ( ID INTEGER FLOAT }
First+( R' -> Z T R' )={ + - }
First+( R' -> ε )={ ] ) <= < > >= == != , ; }
First+( Z -> + )={ + }
First+( Z -> - )={ - }
First+( T -> V T' )={ ( ID INTEGER FLOAT }
First+( T' -> U V T' )={ * / }
First+( T' -> ε )={ ] <= < > >= == != ; ) , + - }
First+( U -> * )={ * }
First+( U -> / )={ / }
First+( V -> ( R ) )={ ( }
First+( V -> ID V' )={ ID }
First+( V -> W )={ INTEGER FLOAT }
First+( V' -> [ R ] )={ [ }
First+( V' -> ( X ) ; )={ ( }
First+( V' -> ε )={ * / + - ] <= < > >= == != ; ) , ε }
First+( W -> INTEGER )={ INTEGER }
First+( W -> FLOAT )={ FLOAT }
First+( X -> R Y )={ ( ID INTEGER FLOAT }
First+( X -> ε )={ ) }
First+( Y -> , R Y )={ , }
First+( Y -> ε )={ ) }