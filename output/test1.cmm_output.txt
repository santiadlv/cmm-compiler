==============================
Results for file: 'test1.cmm'
==============================

TOKEN_IDS: {'int': 1, 'float': 2, 'string': 3, 'void': 4, 'if': 5, 'else': 6, 'for': 7, 'while': 8, 'read': 9, 'write': 10, 'return': 11, '+': 12, '-': 13, '*': 14, '/': 15, '<': 16, '>': 17, '=': 18, '!': 19, ';': 20, ',': 21, '"': 22, '.': 23, '(': 24, ')': 25, '[': 26, ']': 27, '{': 28, '}': 29, '<=': 30, '>=': 31, '==': 32, '!=': 33, 'IDENTIFIER': 34, 'INT_CONST': 35, 'FLOAT_CONST': 36, 'STRING': 37, 'COMMENT': 38}

OUTPUT: [(38, 1), 1, (34, 1), 26, (35, 1), 27, 20, 3, (34, 2), 20, 2, (34, 3), 20, 2, (34, 4), 26, (35, 1), 27, 20, 1, (34, 5), 24, 2, (34, 6), 26, 27, 21, 1, (34, 7), 21, 1, (34, 8), 25, 28, 1, (34, 9), 20, 2, (34, 10), 20, 1, (34, 11), 20, (34, 11), 18, (34, 7), 20, (34, 10), 18, (34, 6), 26, (34, 7), 27, 20, (34, 9), 18, (34, 7), 12, (35, 2), 20, 8, 24, (34, 9), 16, (34, 8), 25, 28, 5, 24, (34, 6), 26, (34, 9), 27, 16, (34, 1), 25, 28, (34, 10), 18, (34, 6), 26, (34, 9), 27, 20, (34, 11), 18, (34, 9), 20, 29, (34, 9), 18, (34, 9), 12, (35, 2), 20, 29, 11, (34, 11), 20, 29, (38, 2), 4, (34, 12), 24, 2, (34, 6), 26, 27, 21, 1, (34, 7), 21, 1, (34, 8), 25, 28, 1, (34, 9), 20, 1, (34, 11), 20, (34, 9), 18, (34, 7), 20, 8, 24, (34, 9), 16, (34, 8), 13, (35, 2), 25, 28, 2, (34, 13), 20, (34, 11), 18, (34, 5), 24, (34, 6), 21, (34, 9), 21, (34, 8), 25, 20, (34, 13), 18, (34, 6), 26, (34, 11), 27, 20, (34, 6), 26, (34, 11), 27, 18, (34, 6), 26, (34, 9), 27, 20, (34, 6), 26, (34, 9), 27, 18, (34, 13), 20, (34, 9), 18, (34, 9), 12, (35, 2), 20, 29, 11, 20, 29, (38, 3), 4, (34, 14), 24, 4, 25, 28, 1, (34, 9), 20, (34, 2), 18, (37, 1), 20, 10, 24, (34, 2), 25, 20, 9, 24, (34, 3), 25, 20, 8, 24, (34, 9), 16, (35, 1), 25, 28, (34, 2), 18, (37, 2), 20, 10, 24, (34, 2), 25, 20, 9, (34, 1), 26, (34, 9), 27, 20, (34, 4), 26, (34, 9), 27, 18, (34, 1), 26, (34, 9), 27, 14, (34, 3), 20, (34, 9), 18, (34, 9), 12, (35, 2), 20, 29, 11, 20, 29, (38, 4), 4, (34, 15), 24, 4, 25, 28, 1, (34, 9), 20, (34, 9), 18, (35, 3), 20, 8, 24, (34, 9), 16, (35, 1), 25, 28, 10, (34, 4), 26, (34, 9), 27, 20, (34, 9), 18, (34, 9), 12, (35, 2), 20, 29, 11, 20, 29, (38, 5), 4, (34, 16), 24, 4, 25, 28, (34, 2), 18, (37, 3), 20, 10, 24, (34, 2), 25, 20, (34, 14), 24, 25, 20, (34, 2), 18, (37, 4), 20, 10, 24, (34, 2), 25, 20, (34, 12), 24, (34, 4), 21, (35, 3), 21, (35, 1), 25, 20, (34, 2), 18, (37, 5), 20, 10, 24, (34, 2), 25, 20, (34, 15), 24, 25, 20, 11, 20, 29, (38, 6)]

IDS (34): {1: 'x', 2: 's', 3: 'f1', 4: 'f2', 5: 'miniloc', 6: 'a', 7: 'low', 8: 'high', 9: 'i', 10: 'y', 11: 'k', 12: 'sort', 13: 't', 14: 'readArray', 15: 'writeArray', 16: 'main'}

INTS (35): {1: 10, 2: 1, 3: 0}

FLOATS (36): {}

STRINGS (37): {1: '"Enter a float number: "', 2: '"Enter an integer number: "', 3: '"Reading Information….."', 4: '"Sorting….."', 5: '"Sorted Array:"'}

COMMENTS (38): {1: '/* Program that reads a 10 element array of\nintegers, and then multiply each element of\nthe array by a float, stores the result into an\narray of floats. Subsequently, the array of\nfloats is sorted and display it into standard\noutput.*/', 2: '/* END of miniloc() */', 3: '/* END of sort() */', 4: '/* END of readArray() */', 5: '/* END of writeArray() */', 6: '/* END of main() */'}

