void foo(void) {

    int i;
    for (i = 0; i < > <= >= ; i++ ++i --i i-- ) {

    }

    return;
}

===================================================

void bar(int x, float y) {
    int t;
    t = 0;

    while ((x / 2) < y) {
        t = t + (x * 2);
        x = x + 1;
        y = foo();
    }
    
    return;
}

==================================================

void main(void) {
    x = 4;
    return;
}

==================================================

int x;
x = 1;

int main(int x) {
    x = 2;
    write(x);
}

==================================================

string bar() {
    return "hello";
}

int foo(int x, int y) {
    if (x < y[bar()]) {
        return x;
    } else {
        return y;
    }
}

==================================================

read x;
read(x);

==================================================

void main(void) {
    int x;
    x = 5;
    float y[x];
    return ;
}

==================================================

string temp(int x[]) {
    if (x[(1)]) {
        write("hello");
    }
}

==================================================

float y[x];
float y[x - (x / 2)];

==================================================

int x;
x = 1 + 2 + 3 + 4;

==================================================

miniloc(x, y, z);
miniloc(x + 1, y + 2, z + 3);
miniloc((x), (y), (z));
miniloc(foo(x, y, z), bar(temp(5)), baz(5.1));

==================================================

int main(float x[]) {
    return 1;
}

int y[6];
int z;
z = main(y);

==================================================
